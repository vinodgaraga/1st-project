###############################
###       USAGE  ##############
###############################
puts "USAGE :- "
puts "fanin <inst_name> <level_number> # To get the all fanin of cells and all fanin of output port"
puts "fanout <inst_name> <level_number> # To get the all fanout of inst and all fanout of input port"
###############################

#to find fanin of flop and port
proc fanin { inst { level 1 }  } {
set fanin_Inst(0) $inst
for { set i 1} { $i <= $level } { incr i } {
       deselectAll ; select_obj $fanin_Inst([expr $i - 1])
        set class [ get_db selected .obj_type ]
        if { [lsearch $class "port" ] >= 1 } {
	deselect_obj [get_db selected -if {.obj_type != port}]
    	set fanin_Inst($i) [ get_object_name [get_cells -of_objects [all_fanin -to [dbGet selected.name ] -startpoints_only] -quiet ] ]
    	set fanin_Port($i) [ get_object_name [get_ports [all_fanin -to [dbGet selected.name ] -startpoints_only] -quiet ] ]
	} else {
 		set fanin_Inst($i) [ get_object_name [ remove_from_collection  [get_cells -of_objects [all_fanin -to [get_pins -of_objects [dbGet selected.name ] -filter "direction == in && is_clock ==false  && name !~ SE && name !~ SI "] -startpoints_only]] [get_cells [dbGet selected.name]] ] ]
        	set fanin_Port($i) [ get_object_name [get_ports [all_fanin -to [get_pins -of_objects [dbGet selected.name ] -filter "direction == in && is_clock ==false && name !~ SE && name !~ SI"] -startpoints_only] -quiet -filter "full_name !~ *scan* && full_name !~ *global_debug_en* && full_name !~ *reset_* && full_name !~ load_config_ && full_name !~ dfx_cfg_occ_rst_dis && full_name !~ *edt* && full_name !~ wrapper* && full_name !~ bypass_clock_control && full_name !~ s2c_dfx_in* && full_name !~ dfx_in* && full_name !~ keep_stable_shift_reg"] ]
	 }
        set MemInst($i) ""
        foreach cell $fanin_Inst($i) {
                   set status [ get_property  [ get_cells $cell -quiet ] is_memory_cell ]
                     if { $status eq "true" } {
                     lappend  MemInst($i) [ get_object_name [ get_cells $cell -quiet ] ]
                     } else { }
        }
       global icell$i "" ; global iport$i "" ; global imem$i ""
       set icell$i $fanin_Inst($i) ; set iport$i $fanin_Port($i) ; set imem$i $MemInst($i)
       puts "Fanin level $i --> "
       puts "fanin_Inst(icell$i) = [llength $fanin_Inst($i) ]; fanin_Port(iport$i) = [llength $fanin_Port($i)] ; MemInst(imem$i) = [llength  $MemInst($i)] "
}
deselectAll
}

### to find fanout of flop and port


proc fanout { inst { level 1 }  } {
set fanout_Inst(0) $inst
for { set i 1} { $i <= $level } { incr i } {
        deselectAll ; select_obj $fanout_Inst([expr $i - 1])
	set class [ get_db selected .obj_type ]
        if { [lsearch $class "port" ] >= 1 } {
	deselect_obj [get_db selected -if {.obj_type != port}]
         set fanout_Inst($i) [ get_object_name [get_cells -of_objects [all_fanout -from [dbGet selected.name ] -endpoints_only] -quiet]]
         set fanout_Port($i) [ get_object_name [get_ports [all_fanout -from [dbGet selected.name ] -endpoints_only] -quiet] ]
   	} else {
	  set fanout_Inst($i) [ get_object_name [ remove_from_collection  [get_cells -of_objects [all_fanout -from [get_pins -of_objects [dbGet selected.name ] -filter "direction == out && is_clock ==false  && name !~ SE && name !~ SI "] -endpoints_only]] [get_cells [dbGet selected.name]] ] ]
    	set fanout_Port($i) [ get_object_name [get_ports [all_fanout -from [get_pins -of_objects [dbGet selected.name ] -filter "direction == out && is_clock ==false && name !~ SE && name !~ SI"] -endpoints_only] -quiet  -filter "full_name !~ *scan* && full_name !~ *global_debug_en* && full_name !~ *reset_* && full_name !~ load_config_ && full_name !~ dfx_cfg_occ_rst_dis && full_name !~ *edt* && full_name !~ wrapper* && full_name !~ bypass_clock_control && full_name !~ s2c_dfx_in* && full_name !~ dfx_in* && full_name !~ keep_stable_shift_reg" ] ]
	}
     set MemInst($i) ""
        foreach cell $fanout_Inst($i) {
                   set status [ get_property  [ get_cells $cell -quiet ] is_memory_cell ]
                     if { $status eq "true" } {
                     lappend  MemInst($i) [ get_object_name [ get_cells $cell -quiet ] ]
                     } else { }
        }
       global ocell$i "" ; global oport$i "" ; global omem$i ""
       set ocell$i $fanout_Inst($i) ; set oport$i $fanout_Port($i) ; set omem$i $MemInst($i)
       puts "Fanout level $i --> "
       puts "fanout_Inst(ocell$i) = [llength $fanout_Inst($i) ]; fanout_Port(oport$i) = [llength $fanout_Port($i)] ; MemInst(omem$i) = [llength  $MemInst($i)] "
}
deselectAll
}
